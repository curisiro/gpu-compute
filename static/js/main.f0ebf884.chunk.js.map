{"version":3,"sources":["App.tsx","index.tsx"],"names":["browserbench","UAParser","getResult","window","App","state","output","getBenchmarkText","componentDidMount","stats","Stats","showPanel","document","body","appendChild","dom","requestAnimationFrame","animate","begin","end","setInterval","setState","benchmarking","isBenchmarking","style","textAlign","backgroundColor","minHeight","color","display","flexDirection","alignItems","fontSize","type","height","width","margin","paddingTop","paddingBottom","paddingLeft","paddingRight","onClick","startBenchmarking","fontFamily","maxWidth","background","borderRadius","padding","marginTop","overflow","whiteSpace","this","React","Component","ReactDOM","render","getElementById"],"mappings":"uSAQMA,IAHS,I,KAAIC,WACCC,YAEEC,OAAeH,cAWhBI,E,4MACnBC,MAAQ,CAAEC,OAAQN,EAAaO,oB,EAE/BC,kBAAoB,WAClB,IAAMC,EAAQ,IAAIC,IAClBD,EAAME,UAAU,GAChBC,SAASC,KAAKC,YAAYL,EAAMM,KAMhCC,uBALgB,SAAVC,IACJR,EAAMS,QACNT,EAAMU,MACNH,sBAAsBC,MAGxBG,aACE,kBAAM,EAAKC,SAAS,CAAEf,OAAQN,EAAaO,mBAAoBe,aAActB,EAAauB,qBAC1F,M,uDAIM,IAAD,OACP,OACE,yBAAKC,MAAO,CAAEC,UAAW,WACvB,yBACED,MAAO,CACLE,gBAAiB,UACjBC,UAAW,QACXC,MAAO,QACPC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,SAAU,SAIL,EAAK3B,MAAMiB,aAmBP,kBAAC,IAAD,CAAcW,KAAM,QAASL,MAAO,QAASM,OAAQ,GAAIC,MAAO,KAjBrE,4BACEX,MAAO,CACLY,OAAQ,OACRC,WAAY,MACZC,cAAe,MACfC,YAAa,OACbC,aAAc,OACdN,OAAQ,QAEVO,QAAS,WACPzC,EAAa0C,sBAVjB,mBAoBN,yBACElB,MAAO,CACLmB,WAAY,YACZC,SAAU,OACVC,WAAY,oBACZC,aAAc,OACdC,QAAS,SAGX,8BAKA,yBACEvB,MAAO,CACLwB,UAAW,OACXC,SAAU,OACVxB,UAAW,OACXyB,WAAY,WACZP,WAAY,cAGbQ,KAAK9C,MAAMC,e,GA/EO8C,IAAMC,WCdvCC,IAASC,OAAO,kBAAC,EAAD,MAAS3C,SAAS4C,eAAe,W","file":"static/js/main.f0ebf884.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactLoading from \"react-loading\";\nimport { default as Stats } from \"stats.js\";\nimport { UAParser } from \"ua-parser-js\";\n\nconst parser = new UAParser();\nvar result = parser.getResult();\n\nconst browserbench = (window as any).browserbench as {\n  startBenchmarking: () => Promise<void>;\n  getBenchmarkText: () => string;\n  isBenchmarking: () => boolean;\n};\n\ninterface AppState {\n  output: string;\n  benchmarking: boolean;\n}\n\nexport default class App extends React.Component<{}, AppState> {\n  state = { output: browserbench.getBenchmarkText() } as AppState;\n\n  componentDidMount = () => {\n    const stats = new Stats();\n    stats.showPanel(0);\n    document.body.appendChild(stats.dom);\n    const animate = () => {\n      stats.begin();\n      stats.end();\n      requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n    setInterval(\n      () => this.setState({ output: browserbench.getBenchmarkText(), benchmarking: browserbench.isBenchmarking() }),\n      100\n    );\n  };\n\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div\n          style={{\n            backgroundColor: \"#282c34\",\n            minHeight: \"100vh\",\n            color: \"white\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: \"16px\"\n          }}\n        >\n          {(() => {\n            if (!this.state.benchmarking) {\n              return (\n                <button\n                  style={{\n                    margin: \"20px\",\n                    paddingTop: \"5px\",\n                    paddingBottom: \"5px\",\n                    paddingLeft: \"15px\",\n                    paddingRight: \"15px\",\n                    height: \"30px\"\n                  }}\n                  onClick={() => {\n                    browserbench.startBenchmarking();\n                  }}\n                >\n                  Start Benchmark\n                </button>\n              );\n            } else {\n              return <ReactLoading type={\"cylon\"} color={\"white\"} height={70} width={70} />;\n            }\n          })()}\n          <div\n            style={{\n              fontFamily: \"monospace\",\n              maxWidth: \"80vw\",\n              background: \"hsl(224, 8%, 22%)\",\n              borderRadius: \"15px\",\n              padding: \"15px\"\n            }}\n          >\n            <div>\n              {/*`${result.browser.name} ${result.browser.major}, ` +\n                `${result.os.name} ${result.os.version}, ` +\n          `${this.getWebGLRenderer()}`*/}\n            </div>\n            <div\n              style={{\n                marginTop: \"15px\",\n                overflow: \"auto\",\n                textAlign: \"left\",\n                whiteSpace: \"pre-wrap\",\n                fontFamily: \"monospace\"\n              }}\n            >\n              {this.state.output}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}